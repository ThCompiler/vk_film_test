{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Rest API Для управления базо данных фильмов",
        "title": "Фильмотека",
        "contact": {
            "name": "Artem Vetoshkin",
            "email": "vet_v2002@mail.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/actor": {
            "post": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Добавляет актёра включая его имя, пол и дату рождения.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Добавление актёра.",
                "parameters": [
                    {
                        "description": "Информация о добавляемом актёре",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateActor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Актёр успешно добавлен в базу",
                        "schema": {
                            "$ref": "#/definitions/response.Actor"
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на создание актёра",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/actor/list": {
            "get": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Формирует список всех актёров в системы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Получение списка актёров.",
                "responses": {
                    "200": {
                        "description": "Список актёров успешно сформирован",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ActorWithFilms"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/actor/{actor_id}": {
            "put": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Обновляет данные об актёре. Все переданные поля будут обновлены. Отсутствующие поля будут оставлены без изменений.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Обновление данных об актёре.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Уникальный идентификатор актёра",
                        "name": "actor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Информация об обновлении",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateActor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Актёр успешно обновлен в базе",
                        "schema": {
                            "$ref": "#/definitions/response.ActorWithFilms"
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на обновление актёра",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "404": {
                        "description": "Актёр с указанным id не найден",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Удаляет информацию об актёре по его id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actor"
                ],
                "summary": "Удаление актёра.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Уникальный идентификатор актёра",
                        "name": "actor_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Актёр успешно удалён"
                    },
                    "400": {
                        "description": "В теле запросе ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на удаление актёра",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "404": {
                        "description": "Актёр с указанным id не найден",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/film": {
            "post": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Добавляет фильм включая его название, описание, рейтинг, дату публикации и список игравших в нём актёров.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "film"
                ],
                "summary": "Добавление фильма.",
                "parameters": [
                    {
                        "description": "Информация о добавляемом фильме",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateFilm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Фильм успешно добавлен в базу",
                        "schema": {
                            "$ref": "#/definitions/response.Film"
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на создание фильма",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/film/list": {
            "get": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Позволяет получить список фильмом отсортированный по определённому полю. А также можно делать поиска списка фильма по имени актёра или названии фильма. Если параметры \"search_by\" и \"search_string\" не указаны, поиск не производится.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "film"
                ],
                "summary": "Получение списка фильмов.",
                "parameters": [
                    {
                        "enum": [
                            "DESC",
                            "ASC"
                        ],
                        "type": "string",
                        "default": "DESC",
                        "description": "Порядок сортировки. Возможна сортировка по возрастанию 'asc' или по убыванию 'desc'.",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "rating",
                            "name",
                            "publish_date"
                        ],
                        "type": "string",
                        "default": "rating",
                        "description": "Параметр сортировки. Возможна сортировка по рейтингу 'rating', имени 'name' и дате публикации 'publish_date'.",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "actor",
                            "film"
                        ],
                        "type": "string",
                        "description": "Параметр поиска. Возможен поиск по фрагменту имени актёра 'actor' или фрагменту названия фильма 'film'. Обязателен при указании параметра 'search_name'.",
                        "name": "search_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фргамнет, по которому осуществляется поиск. Обязателен при указании параметра 'search_by'",
                        "name": "search_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список фильмом успешно сформирован",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Film"
                            }
                        }
                    },
                    "400": {
                        "description": "В теле запросе ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/film/{film_id}": {
            "put": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Обновляет данные об фильме. Все переданные поля будут обновлены. Отсутствующие поля /",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "film"
                ],
                "summary": "Обновление данных об фильме.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Уникальный идентификатор фильма",
                        "name": "film_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Информация об обновлении",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateFilm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильм успешно обновлен в базе",
                        "schema": {
                            "$ref": "#/definitions/response.Film"
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на обновление фильма",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "404": {
                        "description": "Фильм с указанным id не найден",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Удаляет информацию о фильме из системы по его id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "film"
                ],
                "summary": "Удаление фильма.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Уникальный идентификатор фильма",
                        "name": "film_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильм успешно удалён"
                    },
                    "400": {
                        "description": "В теле запросе ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на удаление фильма",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "404": {
                        "description": "Фильм с указанным id не найден",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизация пользователя в системе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Авторизация.",
                "parameters": [
                    {
                        "description": "Логин и пароль пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно авторизован",
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Устанавливает сессию текущего пользователя"
                            }
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "409": {
                        "description": "Неверный логин или пароль",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "418": {
                        "description": "Пользователь уже авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Позволяет выйти пользователю из системы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Выход из системы.",
                "responses": {
                    "200": {
                        "description": "Пользователь успешно вышел из системы"
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Добавляет пользователя включая его логин, пароль и роль. По умолчанию роль 'user'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Добавление пользователя.",
                "parameters": [
                    {
                        "description": "Информация о добавляемом пользователе",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно добавлен в базу",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на создание пользователя",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким же логином уже существует",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Возвращает список пользователей системы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение списка пользователей.",
                "responses": {
                    "200": {
                        "description": "Список пользователей успешно сформирован",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/user/{user_id}": {
            "delete": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Удаляет пользователя по его id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Удаление пользователя.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Уникальный идентификатор пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно удалён"
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на удаление пользователя",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "404": {
                        "description": "Пользователь с указанным id не найден",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        },
        "/user/{user_id}/role": {
            "put": {
                "security": [
                    {
                        "sessionCookie": []
                    }
                ],
                "description": "Обновляет пользовательскую роль.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Обновление роли пользователя.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Уникальный идентификатор пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Информация о добавляемом пользователе",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Роль пользователя успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/response.User"
                        }
                    },
                    "400": {
                        "description": "В теле запроса ошибка",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "403": {
                        "description": "У пользователя нет прав на создание пользователя",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "404": {
                        "description": "Пользователь с указанным id не найден",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/operate.ModelError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "operate.ModelError": {
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string"
                }
            }
        },
        "request.CreateActor": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2002"
                },
                "name": {
                    "type": "string",
                    "example": "Тимоти Шаламе"
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ],
                    "example": "male"
                }
            }
        },
        "request.CreateFilm": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "data_publish": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2023"
                },
                "description": {
                    "type": "string",
                    "example": "Futuristic film"
                },
                "name": {
                    "type": "string",
                    "example": "Dune"
                },
                "rating": {
                    "type": "integer",
                    "format": "uint8",
                    "example": 9
                }
            }
        },
        "request.CreateUser": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "login"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "role": {
                    "type": "string",
                    "default": "user",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "user"
                }
            }
        },
        "request.Login": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "login"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "request.UpdateActor": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2002"
                },
                "name": {
                    "type": "string",
                    "example": "Тимоти Шаламе"
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ],
                    "example": "male"
                }
            }
        },
        "request.UpdateFilm": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "data_publish": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2023"
                },
                "description": {
                    "type": "string",
                    "example": "Futuristic film"
                },
                "name": {
                    "type": "string",
                    "example": "Dune"
                },
                "rating": {
                    "type": "integer",
                    "format": "uint8",
                    "example": 9
                }
            }
        },
        "request.UpdateRole": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "user"
                }
            }
        },
        "response.Actor": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2002"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "Тимоти Шаламе"
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ],
                    "example": "male"
                }
            }
        },
        "response.ActorFilms": {
            "type": "object",
            "properties": {
                "data_publish": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2023"
                },
                "description": {
                    "type": "string",
                    "example": "Futuristic film"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "Dune"
                },
                "rating": {
                    "type": "integer",
                    "format": "uint8",
                    "example": 9
                }
            }
        },
        "response.ActorWithFilms": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2002"
                },
                "films": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ActorFilms"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "Тимоти Шаламе"
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ],
                    "example": "male"
                }
            }
        },
        "response.Film": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FilmActors"
                    }
                },
                "data_publish": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2023"
                },
                "description": {
                    "type": "string",
                    "example": "Futuristic film"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "Dune"
                },
                "rating": {
                    "type": "integer",
                    "format": "uint8",
                    "example": 9
                }
            }
        },
        "response.FilmActors": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "format": "date",
                    "example": "12.02.2002"
                },
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "Тимоти Шаламе"
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ],
                    "example": "male"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5
                },
                "login": {
                    "type": "string",
                    "example": "login"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ],
                    "example": "user"
                }
            }
        }
    },
    "securityDefinitions": {
        "sessionCookie": {
            "description": "Уникальный идентификационный номер сессии",
            "type": "apiKey",
            "name": "session_id",
            "in": "cookie"
        }
    }
}